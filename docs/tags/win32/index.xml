<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Win32 on 展維隨筆</title>
    <link>https://davidhsu666.com/tags/win32/</link>
    <description>Recent content in Win32 on 展維隨筆</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Dec 2020 05:01:26 +0800</lastBuildDate><atom:link href="https://davidhsu666.com/tags/win32/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Win32筆記] 建立視窗 #1</title>
      <link>https://davidhsu666.com/archives/win32note01/</link>
      <pubDate>Fri, 11 Dec 2020 05:01:26 +0800</pubDate>
      
      <guid>https://davidhsu666.com/archives/win32note01/</guid>
      <description>Win32 參考 : MSDN Get Started with Win32 and C++
建立entry point, WinMain() // int WINAPI wWinMain(HINSTANCE hInstance, HINSTANCE, PWSTR pCmdLine, int nCmdShow) // wWinMain為UniCode模式，WinMain為Ansi模式  int CALLBACK WinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow){ // ...  return 0; } #define CALLBACK __stdcall: 簡單來說__stdcall就是專門用來call WinAPI的，詳細還有待研究
參數:
hInstance : windows為應用程式生成的追蹤資料，h代表handle(處理程序)
hPrevInstance : 追蹤建立此視窗的前一個程式，但現在基本無用
lpCmdLine : 相當於int main(int argc, char** argv)的執行時可傳入的參數列 e.g. main.exe -t -d
nCmdShow : 為一整數，在執行時傳入來控制視窗的樣式 e.g. SW_MAXIMIZE (3)、SW_MINIMIZE (6)、SW_SHOWMINNOACTIVE (7 啟動時最小化) 等等</description>
    </item>
    
  </channel>
</rss>
